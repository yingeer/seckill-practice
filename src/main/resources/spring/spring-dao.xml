<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd 
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置整合mybatis过程-->
    <!--<context:component-scan base-package="扫描service包"></context:component-scan>-->
    <!--1：配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--创建dbcp数据源连接池对象-->
       <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
           <property name="driverClass" value="${jdbc.driver}"/>
           <property name="jdbcUrl" value="${jdbc.url}"/>
           <property name="user" value="${jdbc.user}"/>
           <property name="password" value="${jdbc.password}"/>
           <!--c3p0私有属性-->
           <property name="maxPoolSize" value="30"/>
           <property name="minPoolSize" value="10"/>
           <!--关闭连接后不自动commit-->
           <property name="autoCommitOnClose" value="false"/>
           <!--获取连接超时时间-->
           <property name="checkoutTimeout" value="1000"/>
           <!--当获取连接失败时的重试次数-->
           <property name="acquireRetryAttempts" value="2"/>
       </bean>

    <!--创建mybatis的SqlSessionFactory工厂类对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--配置entity包,也就是实体类包,自动扫描,用于别名配置 com.suny.entity.Seckill -> Seckill-->
        <property name="typeAliasesPackage" value="com.suny.entity"/>
        <!--指定mapper文件的地址 此处可以使用*号同配置，表示加载包下所有的xml结尾的mapper文件-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    </bean>

    <!--配置扫描mybatis的dao接口 ，会为dao接口创建myabtis的dao接口实现类对象，放置到session工厂中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory,请注意不要使用sqlSessionFactoryBean,否则会出现注入异常，
        sqlSessionFactoryBeanName后处理，当用到mybatis的时候才回去找sqlSessionFactory，
        防止提前初始化sqlSessionFactory，如jdbc.properties未加载-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定dao接口在哪个包中-->
        <property name="basePackage" value="com.suny.dao"/>
    </bean>

    <!--声明spring 的事务管理器对象-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->

    <!--声明以注解的方式配置spring 的事物-->
    <!-- <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->

    <!--注入redisDao-->
    <bean id="redisDao" class="com.suny.dao.cache.RedisDao">
        <!--构造方法注入值-->
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>

</beans>